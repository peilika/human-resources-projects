@using EFCore.Models;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
	var ers = ViewData["listER"] as ERs;
	var gj = ViewData["GJ"] as CPCs;
	var mz = ViewData["MZ"] as CPCs;
	var xl = ViewData["XL"] as CPCs;
	var nx = ViewData["NX"] as CPCs;
	var zy = ViewData["ZY"] as CPCs;
	var ah = ViewData["AH"] as CPCs;
	var tc = ViewData["TC"] as CPCs;
	var xy = ViewData["XY"] as CPCs;
	var mm = ViewData["MM"] as CPCs;
	var xc = ViewData["XC"] as SSs;
}
<style>
	/*头像上传用到的样式*/
	.avatar-uploader .el-upload {
		border: 1px dashed #d9d9d9;
		border-radius: 6px;
		cursor: pointer;
		position: relative;
		overflow: hidden;
	}

		.avatar-uploader .el-upload:hover {
			border-color: #409EFF;
		}

	.avatar-uploader-icon {
		font-size: 28px;
		color: #8c939d;
		width: 178px;
		height: 178px;
		line-height: 178px;
		text-align: center;
	}

	.avatar {
		width: 178px;
		height: 178px;
		display: block;
	}
	/*用于将el-input文本框变为行内*/
	.inline-input {
		display: inline-block;
		vertical-align: middle;
		margin-right: 10px; /* 可选 */
	}
	/* 控制表单的css */
	.image{
		float:right;
	}
</style>
<div id="Human_Register">
	<el-form :inline="true" class="demo-form-inline">
		<form id="submitForm">
			<table width="100%">
				<tr>
					<td>
						<font color="black">您正在做的业务是：人力资源--人力资源档案管理--人力资源档案登记 </font>
					</td>
				</tr>
				<tr>
					<td align="right">
						<input type="button" value="提交" class="BUTTON_STYLE1" id="submitButton" data-url="@Url.Action("InsertHFDs","HumanResources")" />
						<input type="button" value="清除" class="BUTTON_STYLE1" v-on:click="" />
					</td>
				</tr>
			</table>
			<!-- 包裹表单的表格元素 -->
            <table>
                <!-- 第一行的表单项 -->
				<tr>
					<td>选择机构</td>
					<td colspan="5">
						<div>
							<el-form-item label="" style="width:770px">
								<el-cascader v-model="selected"
											 :options="options"
											 :props="{ value:'kindId',label:'kindName', expandTrigger: 'hover' }"
											 v-on:change="handleChange"
											 style="width:770px"></el-cascader>
							</el-form-item>
							<input type="hidden" v-model="JsonSelected" name="JsonSelected" /><!-- 选择的三级的Json字符串存储（用于提交到后台） -->
						</div>
					</td>
					<td colspan="2" rowspan="5">
						<!-- 上传头像 -->
						<div class="image">
							<el-upload class="avatar-uploader"
									   action="@Url.Action("ImageUpload","HumanResources")"
									   :show-file-list="false"
									   :on-success="handleAvatarSuccess"
									   :before-upload="beforeAvatarUpload">
								<img v-if="imageUrl" :src="imageUrl" class="avatar">
								<i v-else class="el-icon-plus avatar-uploader-icon"></i>
							</el-upload>
							<input type="hidden" v-model="imageUrl" name="ImageUrl"/>
						</div>
					</td>
				</tr>
				<!-- 第二行表单项 -->
				<tr>
					<td>职位选择</td>
					<td colspan="3">
						<el-form-item label="" style="width:450px">
							<el-cascader v-model="selectedCMKs"
										 :options="cmks"
										 :props="{ value:'majorKindId',label:'majorKindName', expandTrigger: 'hover' }"
										 v-on:change="handleChange"
										 style="width:450px"></el-cascader>
						</el-form-item>
						<input type="hidden" v-model="JsonSelectedCMKs" name="JsonSelectedCMKs" /><!-- 选择的职位的Json字符串存储（用于提交到后台） -->
					</td>
					<td>职称</td>
					<td>
						
						<el-form-item label="">
							<el-select v-model="selectedCpc" filterable placeholder="请选择">
								<el-option v-for="item in cpcs"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
						</el-form-item>
						<input type="hidden" v-model="selectedCpc" name="SelectedCpc" /><!-- 选中的职称 -->
					</td>
				</tr>
                <!-- 第三行表单项 -->
                <tr>
					<td>姓名</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanName" placeholder="请输入姓名" v-on:blur="handleBlurName"></el-input>
						</el-form-item>
						<input type="hidden" v-model="HumanName" name="HumanName" />
					</td>
					<td>性别</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanSex" placeholder="请选择性别">
								<el-option v-for="item in sexs"
										   :key="item.sexId"
										   :label="item.sex"
										   :value="item.sex">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanSex" name="HumanSex" />
						</el-form-item>
					</td>
					<td>EMAIL</td>
					<td >
						<el-form-item label="">
                            <el-input v-model="HumanEmail" placeholder="请输入EMAIL" v-on:blur="handleBlurEmail"></el-input>
                            <input type="hidden" v-model="HumanEmail" name="HumanEmail" />
                        </el-form-item>
						
					</td>
				</tr>
				<tr>
					<td>电话</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanTelephone" placeholder="请输入电话" v-on:blur="handleBlurTelephone"></el-input>
						</el-form-item>
						<input type="hidden" v-model="HumanTelephone" name="HumanTelephone" />
					</td>
					<td>QQ</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanQQ" placeholder="请输入QQ" v-on:blur="handleBlurQQ"></el-input>
							<input type="hidden" v-model="HumanQQ" name="HumanQQ"/>
						</el-form-item>
					</td>
					<td>手机</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanMobilephone" placeholder="请输入手机" v-on:blur="handleBlurMobilephone"></el-input>
							<input type="hidden" v-model="HumanMobilephone" name="HumanMobilephone" />
						</el-form-item>
					</td>
				</tr>
                <!-- 第五行表单项 -->
                <tr>
					<td>住址</td>
					<td colspan="3">
						<el-form-item label="" style="width:450px">
							<el-input v-model="HumanAddress" placeholder="请输入住址" style="width:450px"></el-input>
							<input type="hidden" v-model="HumanAddress" name="HumanAddress" />
						</el-form-item>
					</td>
					<td>邮 编</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanPostcode" placeholder="请输入邮编" v-on:blur="handleBlurPostcode"></el-input>
							<input type="hidden" v-model="HumanPostcode" name="HumanPostcode" />
						</el-form-item>
					</td>
				</tr>
                <!-- 第六行表单项 -->
                <tr>
					<td>国籍</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanNationality" placeholder="请选择国籍">
								<el-option v-for="item in HumanNationalitys"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanNationality" name="HumanNationality" />
						</el-form-item>
					</td>
					<td>出生地</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanBirthplace" placeholder="请输入出生地"></el-input>
							<input type="hidden" v-model="HumanBirthplace" name="HumanBirthplace" />
						</el-form-item>
					</td>
					<td>生日</td>
					<td>
						<el-form-item label="">
							<el-date-picker v-model="HumanBirthday"
											name="HumanBirthday"
											type="date"
											placeholder="选择日期"
										    v-on:change="updateAge">
							</el-date-picker>
						</el-form-item>
					</td>
					<td>民族</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanRace" placeholder="请选择国籍">
								<el-option v-for="item in HumanRaces"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanRace" name="HumanRace" />
						</el-form-item>
					</td>
				</tr>
                <!-- 第七行表单项 -->
                <tr>
					<td>宗教信仰</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanReligion" placeholder="请选择宗教信仰">
								<el-option v-for="item in HumanReligions"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanReligion" name="HumanReligion" />
						</el-form-item>
					</td>
					<td>政治面貌</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanParty" placeholder="请选择政治面貌">
								<el-option v-for="item in HumanPartys"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanParty" name="HumanParty" />
						</el-form-item>
					</td>
					<td>身份证号码</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanIdCard" placeholder="请输入身份证号" v-on:blur="handleBlurIdCard"></el-input>
							<input type="hidden" v-model="HumanIdCard" name="HumanIdCard" />
						</el-form-item>

					</td>
					<td>社会保障号码</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanSocietySecurityId" placeholder="请输入社会保障号码" v-on:blur="handleBlurSecurityId"></el-input>
							<input type="hidden" v-model="HumanSocietySecurityId" name="HumanSocietySecurityId" />
						</el-form-item>
					</td>
				</tr>
                <!-- 第八行表单项 -->
                <tr>
					<td>年 龄</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanAge" placeholder="请输入年龄"></el-input>
							<input type="hidden" v-model="HumanAge" name="HumanAge" />
						</el-form-item>
					</td>
					<td>学 历</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanEducatedDegree" placeholder="请选择学历">
								<el-option v-for="item in HumanEducatedDegrees"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanEducatedDegree" name="HumanEducatedDegree" />
						</el-form-item>
					</td>
					<td>教育年限</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanEducatedYears" placeholder="请选择教育年限">
								<el-option v-for="item in HumanEducatedYearslist"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanEducatedYears" name="HumanEducatedYears" />
						</el-form-item>
					</td>
					<td>学历专业</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanEducatedMajor" placeholder="请选择学历专业">
								<el-option v-for="item in HumanEducatedMajors"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanEducatedMajor" name="HumanEducatedMajor" />
						</el-form-item>
					</td>
				</tr>
                <!-- 第九行表单项 -->
                <tr>
					<td>薪酬标准</td>
					<td>
						<el-form-item label="">
							<el-select v-model="SalaryStandardId" placeholder="请选择薪酬标准">
								<el-option v-for="item in SalaryStandards"
										   :key="item.SsdId"
										   :label="item.standardName"
										   :value="item.ssdId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="SalaryStandardId" name="SalaryStandardId" />
						</el-form-item>
					</td>
					<td>开户行</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanBank" placeholder="请输入开户行"></el-input>
							<input type="hidden" v-model="HumanBank" name="HumanBank" />
						</el-form-item>						
					</td>
					<td>账号</td>
					<td>
						<el-form-item label="">
							<el-input v-model="HumanAccount" placeholder="请输入账号"></el-input>
							<input type="hidden" v-model="HumanAccount" name="HumanAccount" />
						</el-form-item>
					</td>
					<td>登记人</td>
					<td>
						<el-form-item label="">
							<el-input v-model="RegisterName" placeholder="请输入登记人" :readonly="true" ></el-input>
							<input type="hidden" v-model="Register" name="Register"/>
						</el-form-item>
					</td>
				</tr>
                <!-- 第十行表单项 -->
                <tr>
					<td>建档时间</td>
					<td>
						<el-form-item label="">
							<el-input v-model="RegistTime" placeholder="请选择建档时间"></el-input>
							<input type="hidden" v-model="RegistTime" name="RegistTime" />
					</td>
					<td>特 长</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanSpeciality" placeholder="请选择特长">
								<el-option v-for="item in HumanSpecialitys"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanSpeciality" name="HumanSpeciality" />
						</el-form-item>
					</td>
					<td>爱 好</td>
					<td>
						<el-form-item label="">
							<el-select v-model="HumanHobby" placeholder="请选择爱好">
								<el-option v-for="item in HumanHobbys"
										   :key="item.pbcId"
										   :label="item.attributeName"
										   :value="item.pbcId">
								</el-option>
							</el-select>
							<input type="hidden" v-model="HumanHobby" name="HumanHobby" />
						</el-form-item>
					</td>
				</tr>
				<!-- 第十一行表单项 -->
				<tr>
					<td>个人履历</td>
					<td colspan="7">
						<el-input v-model="HumanHistroyRecords" placeholder="请输入个人履历"></el-input>
						<input type="hidden" v-model="HumanHistroyRecords" name="HumanHistroyRecords" />
					</td>
				</tr>
				<!-- 第十二行表单项 -->
				<tr>
					<td>家庭关系</td>
					<td colspan="7">
						<el-input v-model="HumanFamilyMembership" placeholder="请输入家庭关系"></el-input>
						<input type="hidden" v-model="HumanFamilyMembership" name="HumanFamilyMembership" />
					</td>
				</tr>
				<!-- 第十三行表单项 -->
				<tr>
					<td>备注</td>
					<td colspan="7">
						<el-input v-model="Remark" placeholder="请输入备注"></el-input>
						<input type="hidden" v-model="Remark" name="Remark" />
					</td>
				</tr>
			</table>
			<script src="~/js/updatego.js"></script>
			<script>
				new Vue({
					el: '#Human_Register',
					data: {
						imageUrl: '',	// 上传的头像路径
						sexs: [{ "sexId": "0", "sex": "男" }, { "sexId": "1", "sex": "女" }],	// 性别
						options: [],	// 机构级联展示的数据--------------=
						cmks: [],	// 职位级联展示的数据------------------=
						selectedCMKs: [],	// 职位级联选择的数据
						selected: [],	// 级联控件选择接收的数据
						JsonSelectedCMKs: '',	// 职位级联选择转的Json数据
						JsonSelected: '',	// 转换为Json类型的选择的数据
						cpcs: [],	// 下拉列表展示职称的数据----------------=
						selectedCpc: '',	// 选择的职称编号
						HumanName: '',	// 姓名
						HumanSex: '',	// 性别
						HumanEmail: '',	// 邮箱
						HumanTelephone: '',	// 电话
						HumanQQ: '',	// QQ
						HumanMobilephone: '',	// 手机
						HumanAddress: '',	// 地址
						HumanPostcode: '',	// 邮编
						HumanNationality: '',	// 国籍
						HumanNationalitys: [],	// 可供选择的国籍---------------=
						HumanBirthplace: '',	// 出生地
						HumanBirthday: '',	//  生日
						HumanRace: '',	// 民族
						HumanRaces: [],	// 可供选择的民族-----------------------=
						HumanReligion: '',	// 宗教信仰
						HumanReligions: [],	// 可供选择的宗教信仰------------------=
						HumanParty: '',	// 政治面貌
						HumanPartys: [],	// 可供选择的政治面貌----------------------=
						HumanIdCard: '',	// 身份证号
						HumanSocietySecurityId: '',	// 社会保障号码
						HumanAge: '',	// 年龄
						HumanEducatedDegree: '',	// 学历
						HumanEducatedDegrees: [],	// 可供选择的学历-----------------=
						HumanEducatedYears: '',	// 教育年限
						HumanEducatedYearslist: [],	// 可供选择的教育年限-----------------=
						HumanEducatedMajor: '',	// 学历专业
						HumanEducatedMajors: [],	// 可供选择的学历专业------------------=
						SalaryStandardId: '',	//薪酬标准编号
						SalaryStandards: [],	//薪酬标准集合----------------------=
						HumanBank: '',	// 开户行
						HumanAccount: '',	// 银行账号
						Register: '',	// 档案登记人
						RegisterName: '',	// 登记人名字
						RegistTime: '',	// 档案登记时间（当前时间）
						HumanSpeciality: '',	// 特长
						HumanSpecialitys: [],	// 可供选择的特长--------------------=
						HumanHobby: '',	// 爱好
						HumanHobbys: [],	// 可供选择的爱好--------------------------=
						HumanHistroyRecords: '',	// 个人履历，简历
						HumanFamilyMembership: '',	// 家庭关系
						Remark: '',	// 备注
					},
					methods: {
						/**
						 * 刷新选中的机构，职位
						 */
						handleChange(value) {
							console.log("点击项输出", value);
							this.JsonSelected = JSON.stringify(this.selected);
							this.JsonSelectedCMKs = JSON.stringify(this.selectedCMKs);
							console.log("级别" + this.JsonSelected, "职位" + this.JsonSelectedCMKs)
						},
						/**
						 * 创建一个临时的 URL 地址，用于在页面上显示上传的头像
						 */
						handleAvatarSuccess(res, file) {
							const filePath = res;
							if (filePath) {
								this.imageUrl = filePath;
							}
							console.log(this.imageUrl);
						},
						/**
						 * 检查上传头像文件的验证函数（只能是jpg格式，限制不能超过2MB）
						 */
						beforeAvatarUpload(file) {
							const isJPG = file.type === 'image/jpeg';
							const isLt2M = file.size / 1024 / 1024 < 2;

							if (!isJPG) {
								this.$message.error('上传头像图片只能是 JPG 格式!');
							}
							if (!isLt2M) {
								this.$message.error('上传头像图片大小不能超过 2MB!');
							}
							return isJPG && isLt2M;
						},
						/**
						 * 检查图片路径到控制台
						 */
						showImageUrl() {
							console.log(this.imageUrl)
						},
						updateAge() {
							if (this.HumanBirthday) {
								const today = new Date();
								const birthday = new Date(this.HumanBirthday);
								const age = today.getFullYear() - birthday.getFullYear();
								this.HumanAge = age;
							} else {
								this.HumanAge = null;
							}
						},
						handleBlurName() {
							if (/^[\u4E00-\u9FA5]+$/.test(this.HumanName)) {
								this.$message({
									message: '正确',
									type: 'success'
								});
							} else {
								this.$message({
									message: '姓名格式错误(汉字)',
									type: 'error',
								});
								this.HumanName = "";
							}
						},
						handleBlurEmail() {
							if (/^[a-zA-Z0-9_-]+@@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/.test(this.HumanEmail)) {
								this.$message({
									message: '正确',
									type: 'success'
								});
							} else {
								this.$message({
									message: '邮箱格式错误(数字@字母.字母)',
									type: 'error',
								});
								this.HumanEmail = "";
							}
						},
						handleBlurTelephone() {
							if (/^[1-9]{4}-[1-9]{7}$/.test(this.HumanTelephone)) {
								this.$message({
									message: '正确',
									type: 'success'
								});
							} else {
								this.$message({
									message: '电话格式错误(1234-1234567)',
									type: 'error',
								});
								this.HumanTelephone = "";
							}
						},
						handleBlurQQ() {
							if (/^[1-9][0-9]{3,10}$/.test(this.HumanQQ)) {
								this.$message({
									message: '正确',
									type: 'success'
								});
							} else {
								this.$message({
									message: 'QQ格式错误(开头1-9，共4-10位)',
									type: 'error',
								});
								this.HumanQQ = "";
							}
						},
						handleBlurMobilephone() {
							if (/^1[3-9]\d{9}$/.test(this.HumanMobilephone)) {
								this.$message({
									message: '正确',
									type: 'success'
								});
							} else {
								this.$message({
									message: '手机号码格式错误(13-19开头，11位)',
									type: 'error',
								});
								this.HumanMobilephone = "";
							}
						},
						handleBlurPostcode() {
							if (/^[1-9]\d{4}$/.test(this.HumanPostcode)) {
								this.$message({
									message: '正确',
									type: 'success'
								});
							} else {
								this.$message({
									message: '邮编格式错误(1-9开头，5位)',
									type: 'error',
								});
								this.HumanPostcode = "";
							}
						},
						handleBlurIdCard() {
							if (/^[1-9]\d{17}$/.test(this.HumanIdCard)) {
								this.$message({
									message: '正确',
									type: 'success'
								});
							} else {
								this.$message({
									message: '身份证格式错误(18位)',
									type: 'error',
								});
								this.HumanIdCard = "";
							}
						},
						handleBlurSecurityId() {
							if (/^[1-9]\d{6}$/.test(this.HumanSocietySecurityId)) {
								this.$message({
									message: '正确',
									type: 'success'
								});
							} else {
								this.$message({
									message: '社区号格式错误(7位)',
									type: 'error',
								});
								this.HumanSocietySecurityId = "";
							}
						},
					},
					mounted() {
						/**
						 * 初始化登记人
						 */
						var loginUser = JSON.parse(sessionStorage.getItem("LoginUser"));
						this.Register = loginUser.uName;
						this.RegisterName = loginUser.uName;
						/**
						 * 初始化登记时间
						 */
						var datetime = new Date();
						var options = { year: 'numeric', month: '2-digit', day: '2-digit' };
						var formattedDate = new Intl.DateTimeFormat('zh-CN', options).format(datetime);
						this.RegistTime = formattedDate;
						/**
						 * 获取所有的机构级联
						 */
						axios.get("@Url.Action("GetCFFKsAndCFSKs","HumanResources")")
							.then(res => {
								this.options = res.data;
							})
						/**
						 * 获取所有的职位级联
						 */
						axios.get("@Url.Action("GetCMKs","HumanResources")")
							.then(res => {
								this.cmks = res.data;
							})
						/**
						*	查询所有职称填充到cpcs
						*/
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=职称设置")
							.then(res => {
								this.cpcs = res.data;
							})
						/**
						 * 查询可供选择的国籍HumanNationalitys
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=国籍")
							.then(res => {
								this.HumanNationalitys = res.data;
							})
						/**
						 * 查询可供选择的民族HumanRaces
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=民族")
							.then(res => {
								this.HumanRaces = res.data;
							})
						/**
						 * 查询可供选择的宗教信仰HumanReligions
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=宗教信仰")
							.then(res => {
								this.HumanReligions = res.data;
							})
						/**
						 * 查询可供选择的政治面貌HumanPartys
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=政治面貌")
							.then(res => {
								this.HumanPartys = res.data;
							})
						/**
						 * 查询可供选择的学历HumanEducatedDegrees
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=学历")
							.then(res => {
								this.HumanEducatedDegrees = res.data;
							})
						/**
						 * 查询可供选择的教育年限HumanEducatedYearslist
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=教育年限")
							.then(res => {
								this.HumanEducatedYearslist = res.data;
							})
						/**
						 * 查询可供选择的学历专业HumanEducatedMajors
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=专业")
							.then(res => {
								this.HumanEducatedMajors = res.data;
							})
						/**
						 * 查询可供选择的薪酬标准SalaryStandards
						 */
						axios.get("@Url.Action("GetSSs","HumanResources")")
							.then(res => {
								this.SalaryStandards = res.data;
								console.log(this.SalaryStandards);
							})
						/**
						 * 查询可供选择的特长HumanSpecialitys
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=特长")
							.then(res => {
								this.HumanSpecialitys = res.data;
							})
						/**
						 * 查询可供选择的爱好HumanHobbys
						 */
						axios.get("@Url.Action("GetByAttributeKind","HumanResources")?type=爱好")
							.then(res => {
								this.HumanHobbys = res.data;
							})

						var encodedString = "@ers.HumanName";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanName = textarea.innerHTML;

						var encodedString = "@ers.HumanAddress";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanAddress = textarea.innerHTML;


						var encodedString = "@ers.HumanPostcode";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanPostcode = textarea.innerHTML;

						var encodedString = "@ers.HumanHomephone";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanTelephone = textarea.innerHTML;

						var encodedString = "@ers.HumanMobilephone";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanMobilephone = textarea.innerHTML;

						var encodedString = "@ers.HumanEmail";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanEmail = textarea.innerHTML;

						this.HumanHobby = @ah.PbcId;

						this.HumanSpeciality = @tc.PbcId;

						var encodedString = "@ers.HumanSex";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanSex = textarea.innerHTML;

						this.HumanReligion = @xy.PbcId;

						this.HumanParty = @mm.PbcId;

						this.HumanNationality = @gj.PbcId;

						this.HumanRace = @mz.PbcId;

						var encodedString = "@ers.HumanBirthday";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanBirthday = textarea.innerHTML;

						var encodedString = "@ers.HumanAge";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanAge = textarea.innerHTML;

						this.HumanEducatedDegree = @xl.PbcId;

						this.HumanEducatedYears = @nx.PbcId;

						this.HumanEducatedMajor = @zy.PbcId;

						var encodedString = "@ers.HumanIdcard";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanIdcard = textarea.innerHTML;
						console.log(textarea.innerHTML);

						var encodedString = "@ers.HumanBirthplace";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanBirthplace = textarea.innerHTML;
						
						var encodedString = " @xc.SsdId";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.SalaryStandardId = @xc.SsdId;

						var encodedString = "@ers.HumanHistoryRecords";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.HumanHistroyRecords = textarea.innerHTML;

						var encodedString = "@ers.Remark";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.Remark = textarea.innerHTML;
						var encodedString = "@ers.HumanPicture";
						var textarea = document.createElement("textarea");
						textarea.innerHTML = encodedString;
						this.imageUrl =textarea.innerHTML;


						this.selectedCMKs = ['@ers.HumanMajorKindId', '@ers.HumanMajorId'];
					}
				})
			</script>
		</form>
	</el-form>
	<div style="height:130px">
	</div>
</div>