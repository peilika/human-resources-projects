@using EFCore.Models;
@model HFDs;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-trasitional.dtd">
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>

<body>
	<div id="Register">
		<form id="submitForm">
			<table width="100%">
				<tr>
					<td>
						<font color="#0000CC">您正在做的业务是:人力资源--调动管理--调动登记</font>
					</td>
				</tr>

				<tr>
					<td align="right">
						<input type="button" value="提交" v-on:click="submitButtonClick()" class="btn btn-primary">
						<input type="button" class="btn btn-info" value="返回">
					</td>
				</tr>
			</table>
			<table width="100%" border="1" cellpadding=0 cellspacing=1
				   bordercolorlight=#848284 bordercolordark=#eeeeee
				   class="table">
				<tr height="21">
					<td class="TD_STYLE1" width="8%">
						档案编号
					</td>
					<td class="TD_STYLE2" width="10%">
						<input type="text" name="HumanId" readonly="readonly"
							   v-model="HumanId" class="form-control">

					</td>
					<td class="TD_STYLE1" width="8%">
						姓名
					</td>
					<td class="TD_STYLE2" width="10%">
						<input type="text" name="HumanName"
							   v-model="HumanName" readonly="readonly"
							   class="form-control">
					</td>
					<td class="TD_STYLE1" width="8%">
					</td>
					<td class="TD_STYLE2" width="10%">
					</td>
					<td class="TD_STYLE1" width="8%">
					</td>
					<td class="TD_STYLE2" width="10%">
					</td>
				</tr>
				<tr>

					<td class="TD_STYLE1" width="8%">
						原所属机构
					</td>
					<td class="TD_STYLE2" colspan="5">
						<input type="text" 
							   value="@Model.FirstKindName" readonly="readonly"
							   class="form-control">
					</td>
					
					<td class="TD_STYLE1" width="8%">
					</td>
					<td class="TD_STYLE2" width="10%">
					</td>
				</tr>

				<tr>
					<td class="TD_STYLE1">
						原职位分类
					</td>
					<td class="TD_STYLE2">
						<input type="text"
							   value="@Model.HumanMajorKindName" readonly="readonly" class="form-control">
					</td>
					<td class="TD_STYLE1" width="12%">
						原职位名称
					</td>
					<td class="TD_STYLE2">
						<input type="text" 
							   value="@Model.HunmaMajorName" readonly="readonly"
							   class="form-control">
					</td>
					<td class="TD_STYLE1">
						原薪酬标准
					</td>
					<td class="TD_STYLE2">
						<input type="text" 
							   value="@Model.SalaryStandardName"
							   readonly="readonly" class="form-control">
					</td>
					<td class="TD_STYLE1">
						原薪酬总额
					</td>
					<td class="TD_STYLE2">
						<input type="text" 
							   value="@Model.SalarySum" readonly="readonly"
							   class="form-control">
					</td>
				</tr>
				<tr>
					<td class="TD_STYLE1">
						新机构名称
					</td>
					<td class="TD_STYLE2" colspan="5">
						<el-cascader v-model="selectedList"
									 :options="list"
									 :props="{ value:'kindId', label:'kindName', expandTrigger: 'hover' }"
									 v-on:change="jGChange"></el-cascader>
						<input type="hidden" name="JsonKindId" v-model="JsonKindId">
					</td>

					<td class="TD_STYLE1" width="8%">
					</td>
					<td class="TD_STYLE2" width="10%">
					</td>
				</tr>
				<tr>
					<td class="TD_STYLE1">
						新职位选择
					</td>
					<td class="TD_STYLE2" colspan="3">
						<el-cascader v-model="selectedCmk"
									 :options="cmks"
									 :props="{ value:'majorKindId', label:'majorKindName', expandTrigger: 'hover' }"
									 v-on:change="zWChange"></el-cascader>
						<input type="hidden" name="JsonCMKAndCM" v-model="JsonCMKAndCM">
					</td>
					<td class="TD_STYLE1">
						新薪酬标准
					</td>
					<td class="TD_STYLE2">
						<el-select v-model="SelectedSSsId" placeholder="请选择" v-on:change="updateSalarySum()">
							<el-option v-for="item in SSs"
									   :key="item.standardId"
									   :label="item.standardName"
									   :value="item.standardId">
							</el-option>
						</el-select>
						<input type="hidden" name="sSelectedSSsId" v-model="SelectedSSsId">
					</td>
					<td class="TD_STYLE1">
						新薪酬总额
					</td>
					<td class="TD_STYLE2">
						<input type="text" name="SalarySum" readonly="readonly" v-model="SalarySum" class="form-control">
					</td>
				</tr>

				<tr>
					<td class="TD_STYLE1">
						登记人
					</td>
					<td class="TD_STYLE2">
						<input type="text" readonly="readonly" value="@Model.Register"
							   class="form-control">
					</td>
					<td class="TD_STYLE1">
						登记时间
					</td>
					<td class="TD_STYLE2">
						<input type="text" readonly="readonly" value="@Model.RegistTime" class="form-control">

					</td>
					<td class="TD_STYLE1">
					</td>
					<td class="TD_STYLE2">
					</td>
					<td class="TD_STYLE1">
					</td>
					<td class="TD_STYLE2">
					</td>
				</tr>
				<tr>
					<td class="TD_STYLE1">
						调动原因
					</td>
					<td colspan="7" class="TD_STYLE2">
						<textarea name="ChangeReason" v-model="ChangeReason" rows="6" class="form-control"></textarea>
					</td>
				</tr>
			</table>
		</form>
	</div>
	<script>
		new Vue({
			el: '#Register',
			data: {
				HumanId: '@Model.HumanId',
				HumanName: '@Html.Raw(Model.HumanName)',
				list: [],	// 存储所有机构的级联集合
				selectedList: [],	// 选中的机构（数组）
				JsonKindId: '',	// Json类型的选中的机构（数组）
				cmks: [],	// 全部职位的集合
				selectedCmk: [],	// 选中的职位（数组）
				JsonCMKAndCM: '',	// Json类型的选中的职位（数组）
				SSs: [],	// 所有的薪酬标准集合
				SelectedSSsId: '',	// 选中的薪酬标准
				SalarySum: '',	// 薪酬总额
				ChangeReason: '',	// 调动原因
			},
			methods: {
				/**
				 * 机构级联选择改变事件
				 */
				jGChange(val) {
					console.log(val);
					this.JsonKindId = JSON.stringify(val);
				},
				/**
				 * 职位级联改变事件
				 */
				zWChange(val) {
					console.log(val);
					this.JsonCMKAndCM = JSON.stringify(val);
				},
				/**
				 * 获取机构级联
				 */
				getList() {
					axios.get("@Url.Action("GetCFFKsAndCFSKs","HumanResources")")
						.then(res => {
							console.log("机构级联", res.data)
							this.list = res.data;
						})
				},
				/**
				 * 获取职位级联
				 */
				getCMKs() {
					axios.get("@Url.Action("GetCMKs","HumanResources")")
						.then(res => {
							console.log("职位级联", res.data)
							this.cmks = res.data;
						})
				},
				/**
				 * 获取所有的薪酬标准
				 */
				getSSs() {
					axios.get("@Url.Action("GetSSs","HFDs")")
						.then(res => {
							console.log("可供选择的薪酬标准", res.data)
							this.SSs = res.data;
						})
				},
				/**
				 * 根据选中的薪酬标准获取薪酬总额
				 */
				updateSalarySum(){
					// this.SalarySum = 
					axios.get("/SSs/GetSumById/" + this.SelectedSSsId)
					.then(res => {
						console.log(res.data)
						this.SalarySum = res.data
					})
				},
				/**
				 * 提交表单
				 */
				submitButtonClick() {
					var url = '@Url.Action("Register_success","HFDs")';
					$.post(url, $("#submitForm").serialize(),
						function (data) {
							console.log("updateGo进行输出打印：", data);
							$("#main-content").html(data);
						}
					)
				}
			}, 
			mounted() {
				this.getList();
				this.getCMKs();
				this.getSSs();
			},
		})
	</script>
</body>
</html>


